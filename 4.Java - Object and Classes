<center>Java - 对象与类</center>

Java是一种面向对象的语言。因为它是面向对象的语言，所以Java支持以下基本特性。

    多态性
    
    继承
    
    封装
    
    抽象
    
    类
    
    对象
    
    实例
    
    方法
    
    信息解析
    
    在这一章，我们将会研究概念——类与对象
    
        Object — 对象拥有状态与行为。例如：一只狗拥有的状态有颜色、名字、种类而行为有摇摆尾巴、狗叫声、吃东西。一个对象是类的实例。 
        
        Class — 一个类可以定义为描述行为或者状态模板或者蓝图且支持对象的类型。
        
Java对象
    
    现在让我们深入了解什么是对象。 如果我们思考真实世界，那么我们会发现我们周围有许多对象，猫、狗、人等等。所有对象都有状态跟行为。
    
    假设我们思考一只狗，那么它的状态是 — 名字、种类、颜色，行为是 — 叫、摇尾巴、跑。  
    
    如果你比较软件对象与真实世界的对象，则他们有非常相似的特征。
    
    软件对象也有状态和行为。一个软件对象的状态存储在字段里、行为用方法显示。
    
    因此，在软件的开发中，方法操作对象内部的状态和对象到对象是通过方法交流。
    
Java中的类
    
    类是创建单个对象的蓝图。
    
    以下是类样本。
    
类可以包含以下任何变量类型。
    
    局部变量 — 定义在方法、构造函数、代码块里的变量称为局部变量。变量在方法中被声明或者初始化，且变量随着方法的调用完毕而销毁。
    
    实例变量 — 实例变量在类中方法外的变量。当类实例化时变量会被初始化。可以从特定类中的方法、构造函数、代码块中访问实例变量。
    
    类变量 — 类变量定义在类中方法外，且用关键字static修饰。
    
一个类可以有许多方法去访问各种类型的方法的值。 在以上例子中，barking(), hungry() and sleeping()是方法。        

以下是研究Java语言中类时需要讨论的一些重要主题。
    
构造方法

在讨论关于类方面最要的话题之一是构造函数。每一个类都有一个构造函数。如果我们没有明确在类中写出构造方法，那么
Java编译器在类中默认创建构造方法。

每次创建新的对象时至少有一个构造方法被调用。 构造方法的主要规则是必须跟类的名称一样。一个类可以有很多构造方法。

以下是构造方法的例子  
    
Java也支持单例类，所以你只能创建一个类的一个实例。

文本 —我们有两种不同类型的构造方法。我们接下来在后面的章节中详细讨论构造方法。

创建一个对象

就如前面所说，类提供蓝图给对象。所以基本上，一个对象是由类创建的。在Java里，new关键字是被用于创建新的对象。

用类创建对象有三个步骤 — 
    
    声明 — 用对象类型的变量名声明一个变量
    
    实例化 —  使用关键字new创建对象
    
    初始化 — 用关键字创建对象后，调用构造方法。这个称为对象初始化
    
以下是创建对象的例子    
    
如果我们编译并运行以上程序，那么它将产生以下结果 - 

访问实例变量和方法

通过创建对象访问实例变量和方法。访问一个实例变量，以下是完全合格的路径。

此例子告诉我们如何在一个类中访问实例的变量和方法。

如果我们编译并运行以上程序，那么它将产生以下结果 - 

源文件声明规则

作为本章节最后一部分，现在让我们研究一下源文件的声明规则。在源文件里导入语句和包语句在声明类时是最基本的规则。
    
    每一个源文件仅仅只有一个公共的类。
    
    一个源文件可以有许多非公共类。
    
    公共类的名称必须跟源文件的名称一致， 且源文件名字后加.java。 例如：公共类名称为Employee{}，那么源文件名称应该为Employee.java。
    
    如果类没有在包里被定义，那么包语句必须是源文件的第一个语句。
    
    如果导入语句已经存在，那么它们必须在包语句和类声明之间写入。如果没有包语句，那么应该在源文件第一行导入包语句。
    
    导入和包语句将意味着在源文件里存在的所有类。在源文件中不能声明不同的导入或者包语句到不同的类中。
    
    类有几个访问基本且它们是不同类型的类；抽象类、最终类等等。
    
    除了以上提到的类型的类，Java中也有一些名为局部类与匿名类的特殊类。
    
Java包

    简单说，它是一种类与接口分类的方式。 用Java开发应用程序时，将会写许许多多的类与接口。因此这些类分类是必须的，且使生活更容易。
    
导入语句

在Java中，如果给出的包含包与类名是完全限定名称，那么编译器可以容易的定位源代码或者类。
导入声明是一种给编译器查找特定类的正确位置的方式。

例如：以下行会询问编译器在文件（java_installation/java/io）下载所有可用的类。

一个简单的学习案例

在我们的学习案例中，我们将创建两个类。他们分别是Employee和EmployeeTest。

首先，我们打开记事本添加以下代码。记住这个是Employee类，且这个类是公共类。现在，我们保存源文件且命名为Employee.java。

Employee类有四个实例变量-name, age,designation and salary。该类有一个明确定义的构造方法,且接收一个参数。

在教程的前面提到运行程序时从main方法开始执行。因此，为了可以运行Employee类，我们必须有一个main方法并创建一个对象。
我们将为这些任务创建一个单独的类。

以下是EmployeeTest类，他超级两个实例类，且调用方法给每个对象的变量赋值.   

保存以下代码在EmployeeTest.java文件。

现在，编译这两个类，然后运行EmployeeTest看看结果是否如下

下一章是什么？

在下一个会话，我们将讨论Java中的基本数据类型和开发Java应用软件时怎么使用他们。



    
    
    

