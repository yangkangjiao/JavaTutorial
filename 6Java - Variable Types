<center>Java - Variable Types</center>

变量提供我们指定存储让我们可以操作程序。Java中每一个变量都有特定的数据类型来
确定变量内存的布局与大小；可以存储在内存中的值范围，和可以应用变量的操作集合。

在使用变量之前你必须声明所以的变量。以下是变量声明的基本格式 ——

data type variable [= value][,avrible [ = value ] ....];

这里的数据类型是Java中的数据类型之一，变量是变量的名称。如果要声明多个指定类型的变量，你可以使用逗号分隔列表。

以下是Java中合法声明变量和初始化的例子 —— 

这章将讲解Java语言中可用的不同类型变量。Java中有三类变量 ——

    局部变量

    实例变量

    类/静态变量

局部变量

    局部变量是声明在方法、构造函数、块中。

    当输入方法，构造函数、块时，局部变量被创建。变量退出方法、构造函数或者代    码块时就会被销毁。

    访问修饰符不能用于局部变量。

    局部变量仅仅在声明的方法、构造函数或者代码块中可见。

    局部变量在堆栈级内部实现的。

    局部变量没有默认值，所以局部变量必须声明,且首次使用局部变量时必须分配初始值。

    这里，age是局部变量。它定义在pupAge()方法里，且它的代码仅仅在这个方法内有效。

    以上代码将产生以下结果 ——

    输出

    Puyy age is : 7

    例子
	以下例子是在使用局部变量age时没有初始化，所以它会在编译时给出一个错误。
	
	以上代码在编译时产生以下错误。

实例变量

    实例变量声明在类中，但是在方法、构造函数或者任何块外部。

    当给堆中的对象分配空间时，创建实例变量值的插槽。
	
	当使用关键字new创建对象时，实例变量被创建,且当对象销毁时变量也跟着销毁。
。
    实例变量保存值必须由多个方法、构造函数或者代码块引用，或者对象状态的基本部分必须出现在整个类。

    实例变量可以声明在类级别使用前或者使用后。

    访问修饰符可以运用于实例变量。

    实例变量在类中的方法、构造函数和代码块中可见。一般，我们会把变量私有化。
    因此，子类的可见性是通过使用修饰符修饰变量决定的。

    实例变量有默认值。比如数字，它的默认值为0，比如布尔值是false,对象引用为
	空。值可以在声明期间或者构造函数内分配。
	
	在类中可以直接通过变量名访问实例变量。但是，在静态方法中（当实例变量给出了可访问性)他们必须使用完全限定名称调用实例变量。

类/静态变量
	
	类变量也被称为静态变量，在类中使用关键字static声明，且类变量在方法、构造函数或者块之外。

	不管创建多少对象，每个类的每个类变量仅仅被拷贝一份。

	静态变量很少被用于声明为常量。常数变量可以声明为public/private,final,static的。
从常数变量的初始值开始就不可以改变。

    静态变量存储在静态内存中。静态变量很少被使用除了声明为最终的变量，但是常常用于作为公共的或者私有的常量。

    当程序启动时创建静态变量，当程序停止时销毁静态变量。

    实例变量的可见度是很小的。然而，大部分静态变量声明为公共的，因为他们必须可用于用户类。

    实例变量默认值都是一样。例如数字，它的默认值是0；例如布尔，它的默认值是false；
    和对象引用，它的默认值是null。值可以在声明期间或者构造函数内分配。值可以在特殊静态初始块内分配。

    静态变量可以通过调用类名ClassName.VariableName访问。

    当使用public static final 声明类变量时，变量名（常量）都必须是大写字母。
	如果静态变量不是公共的和最终的，那么它的命名语法跟实例和局部变量一样。

	注解 —— 如果变量是通过外部类来访问，那么常量的访问方式应该是Employee.DEPAPTMENT.

下一章是什么？

在本章中你已经使用了访问修饰符（public & private）.下一章将讲解修饰符与无修饰符。
