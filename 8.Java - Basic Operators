Java提供一组丰富运算符操作变量。我们可以将Java所以运算符划分为以下组 ——

        算法运算符

        关系运算符
  
        位运算符

        逻辑运算符

        赋值运算符

        三元运算符

算法运算符

算法运算符用于数学表达式，且同样的也用于代数。以下表格列出了算法运算符。

假设整型变量A保存的是10和整型变B保存的是20，那么 —— 

列举例子

+ : 在运算符两边添加值。 A + B 等于 30

- ：从左操作数减去右操作数。 A - B 等于 10

* : 运算符两边乘与值。 A * B 等于 200

/ : 左变操作数除于右边操作数。 B / A 等于2

% ：左边操作数除于右边操作数返回余数。 B % A 等于0

++: 操作数的值加1。 B++ 等于21

--：操作数的值减1。 B-- 等于19

关系运算符

Java语言支持以下关系运算符。假设变量A持有值10，变量B持有值20，那么——

列举例子

==：检查两个操作数的值是否相等，如果相等那么判断条件为true。（A == B)是false。

!=: 检查两个操作数的值是否相等，如果不相等那么判断条件为true. (A != B)是true。

> : 检查左边操作数的值是否大于右边操作数，如果是，那么判断条件为true。（A > B )是false。

< : 检查左边操作数的值是否小于右边操作数，如果是，那么判断条件为true。（A < B )是true。

>= : 检查左边操作数的值是否大于等于右边操作数，如果是，那么判断条件为true。（A >= B )是false。

<= : 检查左边操作数的值是否小于等于右边操作数，如果是，那么判断条件为true。（A <= B )是true。

位运算符

Java定义了一些位运算符，它们可以应用于整型类型，长整型、整型、短整型、字符型和字节型。

位运算符用于位执行，且执行位操作。假设 a = 60 和 b = 13;以下是它们二进制表示格式 ——

以下表格列出了位运算符——

假设整型变量A持有值60和变量B持有值13，那么——

列举例子

&  ：如果二进制和运算符存在于两个操作数中，那么二进制运算符拷贝一位比特到结果里。







