<center>Java - 基本数据类型</center>

变量非具体的但是可以保持存储值的内存位置。这意味着当你创建一个变量时，你可以将变量保存在内存空间中。

根据变量数据类型，操作系统分配内存和决定存储什么在预留内存中。因此，给变量分配不同的数据类型， 你可以存储
integers、decimals、或者characters类型的变量。

Java有两种可用的类型 ——
    
    基本数据类型
    
    引用或者对象数据类型

基本数据类型
 
Java支持八种基本数据类型。基本数据类型用计算机语言预先定义且用关键字命名。让我们详细的研究下八种数据类型。

字节

    字节数据类型是一个有符号的八位二进制补码整数。
    
    最小值为-128
    
    最大值为127
    
    默认值为0
    
    字节数据类型用于节省大型数组的空间，主要替代整数，因为字节比整数小四倍。 
    
    例子：byte a = 100, byte b = -50
    
短整型
    
    短数据类型是一个有符号的16位二进制补码整数。
    
    它的最小值是-32,768 (-2^15)。
    
    它的最大值为32,767。
    
    短数据类型也像字节数据类型那样被用于节省内存。短整型比整型小两倍。
    
    它的默认值为0。
    
    例如：short s = 10000, short r = -20000
    
整型

    整型数据类型是有符号的32位2进制补码整数。
    
    它的最小值是- 2,147,483,648 (-2^31)。
    
    它的最大值是2,147,483,647 (2^31 -1)。
    
    整型一般被用于当作积分值的默认数据类型，除非对内存有疑虑。
    
    它的默认值是0。
    
    例如：int a = 100000, int b = -200000
    
长整型
    
    长整型数据类型是一个有符号的64位二进制补码整数。
    
    它的最小值是-9,223,372,036,854,775,808(-2^63)。
    
    它的最大值是9,223,372,036,854,775,807 (inclusive)(2^63 -1)。
    
    当需要比整型类型更宽的范围时就用长整型类型。
    
    它的默认值是0L。
    
    例如：long a = 100000L, long b = -200000L。
    
浮点型
    
    浮点数据类型是单精度32位的IEEE754浮点数。
    
    浮点类型主要被用于大型浮点数的数组中节省内存。
    
    它的默认值是0.0f










